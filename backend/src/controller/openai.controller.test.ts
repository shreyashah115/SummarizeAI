import { Test, TestingModule } from '@nestjs/testing';
import * as request from 'supertest';
import { HighlightModule } from '../app.module';
import { INestApplication } from '@nestjs/common';

describe('OpenAIController (e2e)', () => {
  let app: INestApplication;

  beforeAll(async () => {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [HighlightModule],
    }).compile();

    app = moduleFixture.createNestApplication();
    await app.init();
  });

  afterAll(async () => {
    await app.close();
  });

  describe('/api/v1/openai (POST)', () => {
    it('should return the summary generated by OpenAI', () => {
      const message = 'Test message';

      return request(app.getHttpServer())
        .post('/api/v1/openai')
        .send({ message })
        .expect(201)
        .expect((response) => {
          const { summary } = response.body;
          expect(summary).toBeDefined();
        });
    });

    it('should return an error if the message is missing', () => {
      return request(app.getHttpServer())
        .post('/api/v1/openai')
        .expect(400)
        .expect((response) => {
          const { message } = response.body;
          expect(message).toBe('Bad Request');
        });
    });
  });
});
